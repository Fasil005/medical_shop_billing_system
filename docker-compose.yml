version: '3.8'

services:

  db:
    container_name: postgres
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}        
      POSTGRES_USER: ${POSTGRES_USER}     
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
      
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data  
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 30

  # Django Web Service
  django:
    container_name: django-rf
    build:
      context: .
      dockerfile: Dockerfile  
    env_file:
      - .env  
    volumes:
      - .:/app
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    command: python manage.py runserver $DJANGO_HOST:$DJANGO_PORT
    depends_on:
      db:
        condition: service_healthy

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  celery:
    build: .
    container_name: celery
    command: celery -A ${PROJECT_NAME} worker --beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - django
    env_file:
      - .env

volumes:
  postgres_data:  
